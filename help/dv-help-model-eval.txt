
WARNING: The TensorFlow contrib module will not be included in TensorFlow 2.0.
For more information, please see:
  * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md
  * https://github.com/tensorflow/addons
If you depend on functionality not listed there, please file an issue.

Evaluates a DeepVariant model during training.

flags:

/tmp/Bazel.runfiles_t0fLl_/runfiles/com_google_deepvariant/deepvariant/model_eval.py:
  --batch_size: The number of samples in each batch.
    (default: '1024')
    (an integer)
  --best_checkpoint_metric: <Recall/HomRef|TNs/Indels|Accuracy/All|F1/All|FPs/In
    dels|Accuracy/SNPs|Recall/Indels|TNs/SNPs|TNs/All|FNs/All|Precision/HomRef|F
    1/Het|FPs/All|TPs/All|TPs/SNPs|FNs/Indels|Precision/Indels|F1/HomVar|F1/HomR
    ef|Accuracy/Indels|Precision/Het|Recall/All|Precision/SNPs|Precision/HomVar|
    FNs/SNPs|Recall/HomVar|TPs/Indels|Recall/SNPs|Recall/Het|FPs/SNPs|Precision/
    All|loss>: The metric for measuring the best checkpoint.
    (default: 'F1/All')
  --checkpoint_dir: Directory where the model was written to.
    (default: '/tmp/deepvariant/')
  --dataset_config_pbtxt: The path to the dataset config file.
  --eval_dir: This is used only to generate eval_name, if that is not provided.
  --eval_name: Name of the evaluation if user needs to run multiple evaluations
    on different data sets, such as on training data vs test data. Metrics for
    different evaluations are saved in separate directories, and appear
    separately in tensorboard.  The directory will be named "eval_"+eval_name
  --eval_timeout: Maximum seconds between checkpoints before evaluation
    terminates.
    (default: '10000')
    (an integer)
  --gcp_project: Project name for the Cloud TPU-enabled project. If not
    specified, we will attempt to automatically detect the GCE project from
    metadata.
  --kmp_blocktime: Value to set the KMP_BLOCKTIME environment variable to for
    efficient MKL evaluation. See
    https://www.tensorflow.org/performance/performance_guide for more
    information. The default value is 0, which provides the best performance in
    our tests. Set this flag to "" to not set the variable.
    (default: '0')
  --master: GRPC URL of the master (e.g. grpc://ip.address.of.tpu:8470). You
    must specify either this flag or --tpu_name.
  --max_evaluations: Max number of batches to evaluate
    (an integer)
  --max_examples: Maximum number of examples to evaluate. Set to None (default)
    to evaluate all examples. If not None, must be a positive integer and at
    most `n_examples // max_example batches` will be evaluated.
    (an integer)
  --min_eval_interval_s: Minimum seconds between evaluations.
    (default: '180')
    (an integer)
  --model_name: The name of the model to use for predictions.
    (default: 'inception_v3')
  --tpu_name: Name of the Cloud TPU for Cluster Resolvers. You must specify
    either this flag or --master.
  --tpu_zone: GCE zone where the Cloud TPU is located in. If not specified, we
    will attempt to automatically detect the GCE project from metadata.
  --[no]use_tpu: use tpu if available
    (default: 'false')

absl.logging:
  --[no]alsologtostderr: also log to stderr?
    (default: 'false')
  --log_dir: directory to write logfiles into
    (default: '')
  --[no]logtostderr: Should only log to stderr?
    (default: 'false')
  --[no]showprefixforinfo: If False, do not prepend prefix to info messages when
    it's logged to stderr, --verbosity is set to INFO level, and python logging
    is used.
    (default: 'true')
  --stderrthreshold: log messages at this level, or more severe, to stderr in
    addition to the logfile.  Possible values are 'debug', 'info', 'warning',
    'error', and 'fatal'.  Obsoletes --alsologtostderr. Using --alsologtostderr
    cancels the effect of this flag. Please also note that this flag is subject
    to --verbosity and requires logfile not be stderr.
    (default: 'fatal')
  -v,--verbosity: Logging verbosity level. Messages logged at this level or
    lower will be included. Set to 1 for debug logging. If the flag was not set
    or supplied, the value will be changed from the default of -1 (warning) to 0
    (info) after flags are parsed.
    (default: '-1')
    (an integer)

deepvariant.logging_level:
  --logging_level: select general logging threshold.
    (default: 'INFO')

deepvariant.modeling:
  --label_smoothing: Amount of label smoothing to use. By default this is
    0.0001% meaning that we expect a label error at a rate of 1 / 1,000,000
    (default: '1e-06')
    (a number)
  --learning_rate: Initial learning rate.
    (default: '0.064')
    (a number)
  --learning_rate_decay_factor: Learning rate decay factor.
    (default: '0.94')
    (a number)
  --moving_average_decay: The decay to use for the moving average.
    (default: '0.9999')
    (a number)
  --num_epochs_per_decay: Number of epochs after which learning rate decays.
    (default: '2.0')
    (a number)
  --rmsprop_decay: Decay term for RMSProp.
    (default: '0.9')
    (a number)
  --rmsprop_epsilon: Epsilon term for RMSProp.
    (default: '1.0')
    (a number)
  --rmsprop_momentum: Momentum.
    (default: '0.9')
    (a number)
  --save_interval_secs: Interval (in seconds) at which the model data should be
    checkpointed. Set to 0 to disable, -1 to ignore. Exclusive with
    save_interval_steps.
    (default: '600')
    (an integer)
  --save_interval_steps: Interval (in steps) at which the model data should be
    checkpointed. Set to 0 to disable, -1 to ignore. Exclusive with
    save_interval_secs.
    (default: '-1')
    (an integer)
  --save_summary_steps: Number of steps which must have run before showing
    summaries.
    (default: '100')
    (an integer)
  --seq_type_embedding_size: Set the embedding size for the sequencing type
    embeddings. Default is 200. This flag is only useful when model_name is
    `inception_v3_embedding`.
    (default: '200')
    (an integer)

tensorflow.python.platform.app:
  -h,--[no]help: show this help
    (default: 'false')
  --[no]helpfull: show full help
    (default: 'false')
  --[no]helpshort: show this help
    (default: 'false')

absl.flags:
  --flagfile: Insert flag definitions from the given file into the command line.
    (default: '')
  --undefok: comma-separated list of flag names that it is okay to specify on
    the command line even if the program does not define a flag with that name.
    IMPORTANT: flags in this list that have arguments MUST use the --flag=value
    format.
    (default: '')
